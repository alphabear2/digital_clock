C51 COMPILER V9.59.0.0   ALARM                                                             01/05/2024 10:04:34 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE ALARM
OBJECT MODULE PLACED IN .\Objects\alarm.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE alarm.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\OldDIYClock-master) DEBUG OBJ
                    -ECTEXTEND PRINT(.\Listings\alarm.lst) TABS(2) OBJECT(.\Objects\alarm.obj)

line level    source

   1          #include "sys.h"
   2          #include "alarm.h"
   3          #include "settings.h"
   4          
   5          Alarm_type alarm;
   6          static code Alarm_type alarmMin = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ALARM_NOEDIT};
   7          static code Alarm_type alarmMax = {1, 23, 59, 1, 1, 1, 1, 1, 1, 1, ALARM_NOEDIT};
   8          
   9          void alarmInit(void)
  10          {
  11   1        int8_t i;
  12   1        for(i=0; i<ALARM_ETM; i++) {
  13   2          *(((int8_t*)&alarm.on) + i) = *(((int8_t*)&eep.on) + i);
  14   2        }
  15   1      
  16   1        alarm.etm = ALARM_NOEDIT;
  17   1      
  18   1        return;
  19   1      }
  20          
  21          void alarmSave(void)
  22          {
  23   1        int8_t i;
  24   1        for(i=0; i<ALARM_ETM; i++) {
  25   2          *(((int8_t*)&eep.on) + i) = *(((int8_t*)&alarm.on) + i);
  26   2        }
  27   1      
  28   1        settingsSave();
  29   1      
  30   1        alarm.etm = ALARM_NOEDIT;
  31   1      
  32   1        return;
  33   1      }
  34          
  35          void alarmNextEditParam(void)
  36          {
  37   1        if (alarm.etm >= ALARM_SUN)
  38   1          alarm.etm = ALARM_ON;
  39   1        else
  40   1          alarm.etm++;
  41   1      
  42   1        return;
  43   1      }
  44          
  45          void alarmChange(int8_t diff)
  46          {
  47   1        int8_t *alrm = (int8_t*)&alarm + alarm.etm;
  48   1        int8_t alrmMax = *((int8_t*)&alarmMax + alarm.etm);
  49   1        int8_t alrmMin = *((int8_t*)&alarmMin + alarm.etm);
  50   1      
  51   1        *alrm += diff;
  52   1      
  53   1        if (*alrm > alrmMax)
  54   1          *alrm = alrmMin;
C51 COMPILER V9.59.0.0   ALARM                                                             01/05/2024 10:04:34 PAGE 2   

  55   1        if (*alrm < alrmMin)
  56   1          *alrm = alrmMax;
  57   1      
  58   1        return;
  59   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    269    ----
   CONSTANT SIZE    =     22    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
